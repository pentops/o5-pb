syntax = "proto3";

package o5.application.v1;

import "buf/validate/validate.proto";
import "psm/list/v1/annotations.proto";

option go_package = "github.com/pentops/o5-go/application/v1/application_pb";

message Application {
  string name = 1 [(buf.validate.field).string.pattern = "^[a-z][a-z0-9]+$"];

  repeated Target targets = 4;
  repeated Blobstore blobstores = 7;
  repeated Database databases = 8;
  repeated Runtime runtimes = 9;
  repeated Secret secrets = 10;

  DeploymentConfig deployment_config = 11;

  // Only valid when deployed onto AWS, this should be used only for
  // infrastructure adapters, e.g. a service which sends emails using SES, the
  // o5 deployer itself, dante etc.
  AWSConfig aws_config = 12;
}

message DeploymentConfig {
  // Migrates the stack in one single call, not compatible with database
  // migration
  bool quick_mode = 1;
}

message Target {
  string name = 1;
  //Topology topology = 2;
}

message Blobstore {
  string name = 1;
  repeated Grant grants = 2;
}

message Grant {
  string principal = 1; // This is a lookup in the env file
}

message Database {
  string name = 1 [(psm.list.v1.field).string.open_text.searching.searchable = true];

  oneof engine {
    option (psm.list.v1.oneof).filtering.filterable = true;

    Postgres postgres = 10;
  }

  message Postgres {
    // The name of the database within the postgres instance, default is the
    // name in the parent message
    string db_name = 1 [(psm.list.v1.field).string.open_text.searching.searchable = true];

    // default is 'default' - identifies which database server from the
    // environment config this belongs with
    string server_group = 2 [(psm.list.v1.field).string.open_text.searching.searchable = true];

    repeated string db_extensions = 3 [(psm.list.v1.field).string.open_text.searching.searchable = true];

    Container migrate_container = 4;

    bool run_outbox = 5 [(psm.list.v1.field).bool.filtering.filterable = true];
  }
}

message Runtime {
  string name = 1 [(buf.validate.field).string.pattern = "^[a-z][a-z0-9]+$"];

  // When true, HTTP and gRPC requests will be routed directly to the runtime
  // container, not via the ingress sidecar. The runtime container is
  // responsible for all security, throttling etc.
  bool direct_ingress = 2;

  repeated Container containers = 3;

  repeated Route routes = 4;

  repeated Subscription subscriptions = 5;

  // when true, marks this application as a deployer app, meaning it should have
  // permissions to deploy itself and other permissions
  bool grant_meta_deploy_permissions = 6;
}

message Subscription {
  string name = 1;
  optional string env_name = 2;

  string target_container = 3; // Default: first defined container
  int64 port = 4; // Default: 8080
}

message Route {
  // Default is not to filter, but requires the route_group to be FALLBACK
  string prefix = 1;

  RouteProtocol protocol = 2 [(buf.validate.field).enum = {
    defined_only: true
    not_in: [0]
  }];

  string target_container = 3; // Default: first defined container
  bool bypass_ingress = 4; // Default: false
  int64 port = 5; // Default: 8080
  RouteGroup route_group = 6; // Default: NORMAL
}

enum RouteProtocol {
  ROUTE_PROTOCOL_UNSPECIFIED = 0;
  ROUTE_PROTOCOL_HTTP = 1;
  ROUTE_PROTOCOL_GRPC = 2;
}

enum RouteGroup {
  ROUTE_GROUP_UNSPECIFIED = 0;
  ROUTE_GROUP_FIRST = 1;
  ROUTE_GROUP_NORMAL = 2;
  ROUTE_GROUP_FALLBACK = 3;
}

enum Demand {
  DEMAND_UNSPECIFIED = 0;
  DEMAND_LIGHT = 1;
  DEMAND_MEDIUM = 2;
  DEMAND_HEAVY = 3;
}

message Container {
  string name = 1 [(psm.list.v1.field).string.open_text.searching.searchable = true];

  oneof source {
    option (psm.list.v1.oneof).filtering.filterable = true;

    string image_url = 2;
    Image image = 3;
  }

  repeated string command = 4 [(psm.list.v1.field).string.open_text.searching.searchable = true];

  message Image {
    string name = 1 [(psm.list.v1.field).string.open_text.searching.searchable = true];

    // Defaults to the full git hash being deployed (or passed in --version
    // parameter)
    optional string tag = 2 [(psm.list.v1.field).string.open_text.searching.searchable = true];

    // Defaults to the environment's registry, set here to override
    optional string registry = 3 [(psm.list.v1.field).string.open_text.searching.searchable = true];
  }

  // The amount of Memory and CPU to allocate to the container
  Demand demand = 5 [(psm.list.v1.field).enum.filtering = {filterable: true}];

  repeated EnvironmentVariable env_vars = 6;

  // gives access to /var/run/docker.sock in the container
  bool mount_docker_socket = 7;
}

message EnvironmentVariable {
  string name = 1 [(psm.list.v1.field).string.open_text.searching.searchable = true];

  oneof spec {
    option (psm.list.v1.oneof).filtering.filterable = true;

    string value = 9 [(psm.list.v1.field).string.open_text.searching.searchable = true];
    DatabaseEnvVar database = 10;
    BlobstoreEnvVar blobstore = 11;
    MapEnvVar env_map = 12;
    FromEnvVar from_env = 13;
    SecretEnvVar secret = 14;
    O5Var o5 = 15;
  }
}

message DatabaseEnvVar {
  // references a database in the top level array
  string database_name = 1 [(psm.list.v1.field).string.open_text.searching.searchable = true];

  // TODO: Formats. Default is a full URI which might do.
}

message BlobstoreEnvVar {
  string name = 1 [(psm.list.v1.field).string.open_text.searching.searchable = true];
  optional string sub_path = 2 [(psm.list.v1.field).string.open_text.searching.searchable = true];

  oneof format {
    option (psm.list.v1.oneof).filtering.filterable = true;

    // Sets the variable as s3://<bucket>/<?sub_path>
    // TODO: Deprecate this and build a wrapper through the sidecar
    bool s3_direct = 10 [(psm.list.v1.field).bool.filtering.filterable = true];
  }
}

message MapEnvVar {}

message FromEnvVar {
  string name = 1 [(psm.list.v1.field).string.open_text.searching.searchable = true];
}

message SecretEnvVar {
  string secret_name = 1 [(psm.list.v1.field).string.open_text.searching.searchable = true];
  string json_key = 2 [(psm.list.v1.field).string.open_text.searching.searchable = true];
}

message Secret {
  string name = 1 [(psm.list.v1.field).string.open_text.searching.searchable = true];
}

message AWSConfig {
  SES ses = 1;

  message SES {
    bool send_email = 1;
  }
}

enum O5Var {
  O5_VAR_UNSPECIFIED = 0;

  // address of the sidecar / adapter for gRPC dial
  O5_VAR_ADAPTER_ENDPOINT = 1;
}
