syntax = "proto3";

package o5.deployer.v1.service;

import "google/api/annotations.proto";
import "o5/auth/v1/annotations.proto";
import "o5/deployer/v1/deployment.proto";
import "o5/deployer/v1/stack.proto";
import "psm/list/v1/annotations.proto";
import "psm/list/v1/page.proto";
import "psm/list/v1/query.proto";
import "psm/state/v1/annotations.proto";

option go_package = "github.com/pentops/o5-go/deployer/v1/deployer_spb";

service DeploymentQueryService {
  option (o5.auth.v1.default_auth).none = {};
  rpc GetDeployment(GetDeploymentRequest) returns (GetDeploymentResponse) {
    option (google.api.http) = {get: "/deployer/v1/q/deployment/{deployment_id}"};
    option (psm.state.v1.state_query_method) = {
      name: "deployment"
      get: true
    };
  }

  rpc ListDeploymentEvents(ListDeploymentEventsRequest) returns (ListDeploymentEventsResponse) {
    option (google.api.http) = {
      post: "/deployer/v1/q/deployment/{deployment_id}/events"
      body: "*"
    };
    option (psm.state.v1.state_query_method) = {
      name: "deployment"
      list_events: true
    };
  }

  rpc ListDeployments(ListDeploymentsRequest) returns (ListDeploymentsResponse) {
    option (google.api.http) = {
      post: "/deployer/v1/q/deployments"
      body: "*"
    };
    option (psm.state.v1.state_query_method) = {
      name: "deployment"
      list: true
    };
  }

  rpc GetStack(GetStackRequest) returns (GetStackResponse) {
    option (google.api.http) = {get: "/deployer/v1/q/stack/{stack_id}"};
    option (psm.state.v1.state_query_method) = {
      name: "stack"
      get: true
    };
  }

  rpc ListStacks(ListStacksRequest) returns (ListStacksResponse) {
    option (google.api.http) = {
      post: "/deployer/v1/q/stacks"
      body: "*"
    };
    option (psm.state.v1.state_query_method) = {
      name: "stack"
      list: true
    };
  }

  rpc ListStackEvents(ListStackEventsRequest) returns (ListStackEventsResponse) {
    option (google.api.http) = {
      post: "/deployer/v1/q/stack/{stack_id}/events"
      body: "*"
    };
    option (psm.state.v1.state_query_method) = {
      name: "stack"
      list_events: true
    };
  }
}

message GetDeploymentRequest {
  string deployment_id = 1;
}

message GetDeploymentResponse {
  o5.deployer.v1.DeploymentState state = 1;
  repeated o5.deployer.v1.DeploymentEvent events = 2;
}

message ListDeploymentEventsRequest {
  string deployment_id = 1;

  psm.list.v1.PageRequest page = 100;
  psm.list.v1.QueryRequest query = 101;
}

message ListDeploymentEventsResponse {
  repeated o5.deployer.v1.DeploymentEvent events = 1;

  psm.list.v1.PageResponse page = 100;
}

message ListDeploymentsRequest {
  psm.list.v1.PageRequest page = 100;
  psm.list.v1.QueryRequest query = 101;
  option (psm.list.v1.list_request) = {
    sort_tiebreaker: ["deployment_id"]
  };
}

message ListDeploymentsResponse {
  repeated o5.deployer.v1.DeploymentState deployments = 1;

  psm.list.v1.PageResponse page = 100;
}

message GetStackRequest {
  string stack_id = 1;
}

message GetStackResponse {
  o5.deployer.v1.StackState state = 1;
  repeated o5.deployer.v1.StackEvent events = 2;
}

message ListStacksRequest {
  psm.list.v1.PageRequest page = 100;
  psm.list.v1.QueryRequest query = 101;
  option (psm.list.v1.list_request) = {
    sort_tiebreaker: ["stack_id"]
  };
}

message ListStacksResponse {
  repeated o5.deployer.v1.StackState stacks = 1;

  psm.list.v1.PageResponse page = 100;
}

message ListStackEventsRequest {
  string stack_id = 1;

  psm.list.v1.PageRequest page = 100;
  psm.list.v1.QueryRequest query = 101;
}

message ListStackEventsResponse {
  repeated o5.deployer.v1.StackEvent events = 1;

  psm.list.v1.PageResponse page = 100;
}
