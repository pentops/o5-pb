syntax = "proto3";

package o5.deployer.v1.service;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "o5/auth/v1/annotations.proto";
import "o5/deployer/v1/deployment.proto";
import "o5/deployer/v1/stack.proto";

option go_package = "github.com/pentops/o5-go/deployer/v1/deployer_spb";

service DeploymentCommandService {
  option (o5.auth.v1.default_auth).none = {};
  rpc TriggerDeployment(TriggerDeploymentRequest) returns (TriggerDeploymentResponse) {
    option (google.api.http) = {
      post: "/deployer/v1/c/deployments/{deployment_id}"
      body: "*"
    };
  }

  rpc TerminateDeployment(TerminateDeploymentRequest) returns (TerminateDeploymentResponse) {
    option (google.api.http) = {delete: "/deployer/v1/c/deployments/{deployment_id}"};
  }
}

message TriggerDeploymentRequest {
  string deployment_id = 1 [(buf.validate.field).string.uuid = true];

  string environment_name = 2 [(buf.validate.field).required = true];

  oneof source {
    GithubSource github = 10;
  }

  message GithubSource {
    string owner = 2 [(buf.validate.field).required = true];
    string repo = 3 [(buf.validate.field).required = true];
    string commit = 4 [(buf.validate.field).required = true];
  }
}

message TriggerDeploymentResponse {}

message TerminateDeploymentRequest {
  string deployment_id = 1 [(buf.validate.field).string.uuid = true];
}

message TerminateDeploymentResponse {}
