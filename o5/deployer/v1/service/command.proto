syntax = "proto3";

package o5.deployer.v1.service;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "o5/auth/v1/annotations.proto";
import "o5/deployer/v1/deployment.proto";
import "o5/deployer/v1/environment.proto";
import "o5/deployer/v1/stack.proto";
import "o5/environment/v1/environment.proto";

option go_package = "github.com/pentops/o5-go/deployer/v1/deployer_spb";

service DeploymentCommandService {
  option (o5.auth.v1.default_auth).none = {};
  rpc TriggerDeployment(TriggerDeploymentRequest) returns (TriggerDeploymentResponse) {
    option (google.api.http) = {
      post: "/deployer/v1/c/deployments/{deployment_id}"
      body: "*"
    };
  }

  rpc TerminateDeployment(TerminateDeploymentRequest) returns (TerminateDeploymentResponse) {
    option (google.api.http) = {delete: "/deployer/v1/c/deployments/{deployment_id}"};
  }

  rpc UpsertEnvironment(UpsertEnvironmentRequest) returns (UpsertEnvironmentResponse) {
    option (google.api.http) = {
      post: "/deployer/v1/c/environments/{environment_id}/config"
      body: "*"
    };
  }

  rpc UpsertStack(UpsertStackRequest) returns (UpsertStackResponse) {
    option (google.api.http) = {
      post: "/deployer/v1/c/stacks/{stack_id}/config"
      body: "*"
    };
  }
}

message TriggerDeploymentRequest {
  string deployment_id = 1 [(buf.validate.field).string.uuid = true];

  // Should be either a UUID, or the environment's full name
  string environment = 2;

  o5.deployer.v1.CodeSourceType source = 3;

  o5.deployer.v1.DeploymentFlags flags = 4;
}

message TriggerDeploymentResponse {
  string deployment_id = 1 [(buf.validate.field).string.uuid = true];
  string environment_id = 2 [(buf.validate.field).string.uuid = true];
  string environment_name = 3;
}

message TerminateDeploymentRequest {
  string deployment_id = 1 [(buf.validate.field).string.uuid = true];
}

message TerminateDeploymentResponse {}

message UpsertEnvironmentRequest {
  // Should be either a UUID, or the environment's full name
  string environment_id = 1;

  oneof src {
    o5.environment.v1.Environment config = 2;
    bytes config_yaml = 3;
    bytes config_json = 4;
  }
}

message UpsertEnvironmentResponse {
  o5.deployer.v1.EnvironmentState state = 1 [(buf.validate.field).required = true];
}

message UpsertStackRequest {
  // Should be either a UUID, or the env-app style name for the stack.
  string stack_id = 1;

  o5.deployer.v1.StackConfig config = 4 [(buf.validate.field).required = true];
}

message UpsertStackResponse {
  o5.deployer.v1.StackState state = 1 [(buf.validate.field).required = true];
}
