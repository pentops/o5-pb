syntax = "proto3";

package o5.deployer.v1;

import "buf/validate/validate.proto";
import "o5/application/v1/application.proto";
import "o5/deployer/v1/pgmigrate.proto";
import "psm/list/v1/annotations.proto";

option go_package = "github.com/pentops/o5-go/deployer/v1/deployer_pb";

message DeploymentStep {
  string id = 1 [(buf.validate.field).string.uuid = true];
  string name = 2;
  StepStatus status = 3;
  StepRequestType request = 4;
  StepOutputType output = 5;
  optional string error = 6;
  repeated string depends_on = 7;
}

enum StepStatus {
  STEP_STATUS_UNSPECIFIED = 0;
  STEP_STATUS_BLOCKED = 1;
  STEP_STATUS_ACTIVE = 2;
  STEP_STATUS_DONE = 3;
  STEP_STATUS_FAILED = 4;
}

enum StepOutcome {
  STEP_OUTCOME_UNSPECIFIED = 0;
  // There is nothing to change.
  STEP_OUTCOME_NOP = 1;

  // The change requires downtime to safely be applied,
  // e.g. removing a DB table or replacing an infra element.
  STEP_OUTCOME_DOWNTIME = 2;

  // The change can applied while the previous code version is running
  STEP_OUTCOME_BEFORE = 3;

  // The change can be applied in parallel with the code version being
  // updated.
  STEP_OUTCOME_PARALLEL = 4;
}

message StepOutputType {
  oneof type {
    CFStatus cf_status = 1;
  }

  message CFStatus {
    CFStackOutput output = 1;
  }
}

message StepRequestType {
  oneof type {
    EvalJoin eval_join = 1;
    CFCreate cf_create = 2;
    CFPlan cf_plan = 3;
    CFUpdate cf_update = 4;
    CFScale cf_scale = 5;
    PGUpsert pg_upsert = 6;
    PGEvaluate pg_evaluate = 7;
    PGCleanup pg_cleanup = 8;
    PGMigrate pg_migrate = 9;
  }

  message EvalJoin {}

  message CFCreate {
    CFStackInput spec = 1;
    CFStackOutput output = 2;
  }

  message CFPlan {
    CFStackInput spec = 1;
  }

  message CFUpdate {
    CFStackInput spec = 1;
    CFStackOutput output = 2;
  }

  message CFScale {
    string stack_name = 1;
    int32 desired_count = 2;
  }

  message PGUpsert {
    PostgresSpec spec = 1;

    // the step with cloudformation outputs
    // containing the secret ARN
    string infra_output_step_id = 2;
  }

  message PGEvaluate {
    string db_name = 1;
  }

  message PGCleanup {
    PostgresSpec spec = 1;
  }

  message PGMigrate {
    PostgresSpec spec = 1;

    // the step with cloudformation outputs
    // containing the migration task ARN and secret ARN
    string infra_output_step_id = 2;
  }
}

message StepContext {
  string deployment_id = 1;
  StepPhase phase = 2;
  optional string step_id = 3;
}

enum StepPhase {
  STEP_PHASE_UNSPECIFIED = 0;
  STEP_PHASE_WAIT = 1;
  STEP_PHASE_STEPS = 2;
}

message CFStackInput {
  string stack_name = 1;
  string template_url = 2;
  int32 desired_count = 3;
  repeated CloudFormationStackParameter parameters = 4;
  repeated string sns_topics = 5;
}

message CloudFormationStackParameter {
  string name = 1;

  oneof source {
    string value = 2;
    CloudFormationStackParameterType resolve = 3;
  }
}

message CloudFormationStackParameterType {
  oneof type {
    RulePriority rule_priority = 3;
    DesiredCount desired_count = 4;
  }
  message RulePriority {
    o5.application.v1.RouteGroup route_group = 1;
  }
  message DesiredCount {}
}

message CFStackOutput {
  CFLifecycle lifecycle = 1;
  repeated KeyValue outputs = 2;
}

enum CFLifecycle {
  CF_LIFECYCLE_UNSPECIFIED = 0;

  // Progressing well, no errors, no rollback
  CF_LIFECYCLE_PROGRESS = 1;

  // Update or Create Completed successfully
  CF_LIFECYCLE_COMPLETE = 2;

  // Rolling back to previous version or deleting on create failure
  CF_LIFECYCLE_ROLLING_BACK = 3;

  // Create failure, rolled back to nothing
  CF_LIFECYCLE_CREATE_FAILED = 4;

  // Update or create failure
  CF_LIFECYCLE_TERMINAL = 5;

  // Update failure, rolled back to previous version and now stable.
  // Good when waiting, bad when updating or scaling.
  CF_LIFECYCLE_ROLLED_BACK = 7;

  // Missing, not present currently, either never created or deleted, not not
  // 'rolled back'
  CF_LIFECYCLE_MISSING = 6;
}

message KeyValue {
  string name = 1;
  string value = 2;
}
