syntax = "proto3";

package o5.deployer.v1;

import "buf/validate/validate.proto";
import "o5/deployer/v1/event.proto";
import "o5/deployer/v1/pgmigrate.proto";
import "o5/deployer/v1/steps.proto";
import "psm/list/v1/annotations.proto";
import "psm/state/v1/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/pentops/o5-go/deployer/v1/deployer_pb";

message DeploymentState {
  option (psm.state.v1.state).name = "deployment";

  string deployment_id = 1 [(buf.validate.field).string.uuid = true];
  DeploymentStatus status = 2 [(psm.list.v1.field).enum.filtering = {filterable: true}];
  DeploymentSpec spec = 3;

  string stack_name = 4 [(psm.list.v1.field).string.open_text.searching.searchable = true];
  string stack_id = 7 [
    (buf.validate.field).string.uuid = true,
    (psm.list.v1.field).string.foreign_key.uuid.filtering.filterable = true
  ];

  google.protobuf.Timestamp created_at = 5 [
    (psm.list.v1.field).timestamp = {
      filtering: {filterable: true},
      sorting: {
        sortable: true,
        default_sort: true
      }
    }
  ];

  repeated DeploymentStep steps = 10;
}

message DeploymentSpec {
  string app_name = 1 [(psm.list.v1.field).string.open_text.searching.searchable = true];
  string version = 2 [(psm.list.v1.field).string.open_text.searching.searchable = true];
  string environment_name = 3 [(psm.list.v1.field).string.open_text.searching.searchable = true];
  string environment_id = 9 [(buf.validate.field).string.uuid = true];
  string template_url = 4 [(psm.list.v1.field).string.open_text.searching.searchable = true];

  string ecs_cluster = 10 [(psm.list.v1.field).string.open_text.searching.searchable = true];

  DeploymentFlags flags = 8;

  repeated PostgresSpec databases = 5;
  repeated CloudFormationStackParameter parameters = 6;
  repeated string sns_topics = 7;
}

message DeploymentFlags {
  // Skips scale up/down, directly applying the updates in one infra call.
  bool quick_mode = 11 [(psm.list.v1.field).bool.filtering.filterable = true];
  bool rotate_credentials = 12;

  bool cancel_updates = 8 [(psm.list.v1.field).bool.filtering.filterable = true];
  bool db_only = 9 [(psm.list.v1.field).bool.filtering.filterable = true];
  bool infra_only = 10 [(psm.list.v1.field).bool.filtering.filterable = true];
}

enum DeploymentStatus {
  DEPLOYMENT_STATUS_UNSPECIFIED = 0;
  DEPLOYMENT_STATUS_QUEUED = 1;
  DEPLOYMENT_STATUS_TRIGGERED = 2;
  DEPLOYMENT_STATUS_WAITING = 3;
  DEPLOYMENT_STATUS_AVAILABLE = 4;
  DEPLOYMENT_STATUS_RUNNING = 5;

  DEPLOYMENT_STATUS_DONE = 100;
  DEPLOYMENT_STATUS_FAILED = 101;
  DEPLOYMENT_STATUS_TERMINATED = 102;
}

message DeploymentEvent {
  option (psm.state.v1.event).name = "deployment";
  EventMetadata metadata = 1 [
    (psm.state.v1.event_field).metadata = true,
    (buf.validate.field).required = true
  ];

  string deployment_id = 2 [
    (psm.state.v1.event_field).state_key = true,
    (buf.validate.field).string.uuid = true
  ];

  DeploymentEventType event = 3 [
    (psm.state.v1.event_field).event_type = true,
    (buf.validate.field).required = true
  ];
}

message DeploymentEventType {
  oneof type {
    Created created = 1;
    Triggered triggered = 2;

    StackWait stack_wait = 4;
    StackWaitFailure stack_wait_failure = 5;
    StackAvailable stack_available = 6;

    RunSteps run_steps = 7;
    StepResult step_result = 10;

    Error error = 99;
    Done done = 100;
    Terminated terminated = 101;
  }

  message Created {
    DeploymentSpec spec = 1;
  }

  message Triggered {}

  message StackCreate {}

  // Waits for the stack to be ready, without making any changes
  message StackWait {}

  message StackWaitFailure {
    string error = 1;
  }

  message StackAvailable {
    // nil when no stack exists
    CFStackOutput stack_output = 1;
  }

  message RunSteps {}

  message StepResult {
    string step_id = 1;
    StepStatus status = 2;
    StepOutputType output = 3;
    optional string error = 4;
  }

  message Error {
    string error = 1;
  }

  message Done {}

  message Terminated {}
}
